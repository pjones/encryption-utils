#!/usr/bin/env bash

################################################################################
set -eu
set -o pipefail

################################################################################
option_key_file=
option_pass_name=
option_size=128M

################################################################################
usage() {
  cat <<EOF
Usage: $(basename "$0") [options] file

Create a new encrypted disk image that can be used with the
mount-encrypted-dev tool.

Options:

  -h       This message
  -b BYTES Size of the image file, passed to dd(1)
  -k FILE  File to read the password from
  -p NAME  Read a password via pass(1) giving it NAME

Example:

  $(basename "$0") -p images/foobar -b 1024M disk.img

EOF
}

################################################################################
# Generate the disk image.
make_new_disk_image() {
  local image_file=$1
  local encrypt_flags=("-e")

  if [ -n "$option_key_file" ]; then
    encrypt_flags+=("-k" "$option_key_file")
  fi

  if [ -n "$option_pass_name" ]; then
    encrypt_flags+=("-p" "$option_pass_name")
  fi

  dd if=/dev/zero of="$image_file" bs=1c count=0 seek="$option_size"
  make-encrypted-dev "${encrypt_flags[@]}" "$image_file"

  echo "$image_file"
}

################################################################################
main() {
  local image_file

  while getopts "hb:k:p:" o; do
    case "${o}" in
    h)
      usage
      exit
      ;;

    b)
      option_size=$OPTARG
      ;;

    k)
      option_key_file=$OPTARG
      ;;

    p)
      option_pass_name=$OPTARG
      ;;

    *)
      exit 1
      ;;
    esac
  done

  shift $((OPTIND - 1))

  if [ $# -ne 1 ]; then
    echo >&2 "ERROR: provide exactly one image file name"
    exit 1
  fi

  image_file=$1

  if [ -e "$image_file" ]; then
    echo >&2 "ERROR: file already exists: $image_file"
    exit 1
  fi

  umask 077
  make_new_disk_image "$image_file"
}

################################################################################
main "$@"
